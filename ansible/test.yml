- name: Test Backend and Frontend
  hosts: localhost
  connection: local
  become: no
  vars:
    backend_port: 8082
    frontend_port: 80
    health_check_retries: 20
    health_check_delay: 30

  tasks:
    - name: Vérifier si le backend est en cours d'exécution
      shell: netstat -tuln | grep :{{ backend_port }} || true
      register: port_check
      changed_when: false

    - name: Afficher l'état du port
      debug:
        msg: "État du port {{ backend_port }}: {{ port_check.stdout_lines }}"

    - name: Attendre que le port du backend soit ouvert
      wait_for:
        port: "{{ backend_port }}"
        host: "127.0.0.1"
        timeout: 180
        delay: 10
      register: wait_result

    - name: Afficher le résultat de l'attente
      debug:
        msg: "Résultat de l'attente: {{ wait_result }}"

    - name: Vérifier la santé du backend
      uri:
        url: "http://localhost:{{ backend_port }}/actuator/health"
        method: GET
        return_content: yes
        status_code: [200, 403]
        headers:
          Accept: "application/json"
          Content-Type: "application/json"
      register: backend_health
      until: backend_health.status == 200
      retries: "{{ health_check_retries }}"
      delay: "{{ health_check_delay }}"
      changed_when: false

    - name: Afficher le résultat de la vérification de santé
      debug:
        msg: "État de santé du backend: {{ backend_health }}"

    - name: Tester les endpoints de l'API
      uri:
        url: "http://localhost:{{ backend_port }}/api/students"
        method: GET
        return_content: yes
        status_code: [200, 401]
        headers:
          Accept: "application/json"
          Content-Type: "application/json"
      register: api_check
      changed_when: false

    - name: Afficher le résultat du test API
      debug:
        msg: "Résultat du test API: {{ api_check }}"

    - name: Vérifier la santé du frontend
      uri:
        url: "http://localhost:{{ frontend_port }}"
        method: GET
        return_content: yes
        status_code: 200
      register: frontend_health
      until: frontend_health.status == 200
      retries: "{{ health_check_retries }}"
      delay: "{{ health_check_delay }}"
      changed_when: false

    - name: Afficher le résultat de la vérification frontend
      debug:
        msg: "État de santé du frontend: {{ frontend_health }}"
